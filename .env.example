# Tide API - Environment Configuration Template
# Copy this file to .env and update with your values

# ================================================
# Server Configuration
# ================================================

# Server port (optional, default: 8080)
PORT=8080

# Timezone for logs and display (optional, default: Asia/Tokyo)
TZ=Asia/Tokyo

# Gin mode: debug, release, test (optional, default: release in production)
# GIN_MODE=release

# ================================================
# Data Configuration
# ================================================

# Directory containing CSV constituent data (optional, default: ./data)
DATA_DIR=./data

# Directory containing FES NetCDF files (optional, default: ./data/fes)
FES_DIR=./data/fes

# ================================================
# GCP Configuration (Required for deployment)
# ================================================

# Google Cloud Project ID
PROJECT_ID=your-gcp-project-id

# GCP Region for Cloud Run deployment
REGION=asia-northeast1

# Cloud Run service name
SERVICE_NAME=tides-api

# Artifact Registry repository name
REPOSITORY=cloud-run-source-deploy

# ================================================
# GitHub Configuration (Required for CI/CD)
# ================================================

# GitHub organization or username
GITHUB_ORG=ngs

# GitHub repository name
GITHUB_REPO=tides-api

# ================================================
# Workload Identity Federation (WIF)
# ================================================
# These values are output by scripts/gcp-setup.sh
# Add them to GitHub repository secrets

# WIF Provider (format: projects/PROJECT_NUMBER/locations/global/workloadIdentityPools/POOL_NAME/providers/PROVIDER_NAME)
# WIF_PROVIDER=projects/123456789/locations/global/workloadIdentityPools/github-pool/providers/github-provider

# WIF Service Account email
# WIF_SERVICE_ACCOUNT=github-actions-sa@your-project-id.iam.gserviceaccount.com

# ================================================
# FES Data Download (Optional)
# ================================================
# Required for downloading real FES2014 data from AVISO+
# Register at: https://www.aviso.altimetry.fr/

# AVISO+ username (store in .fes_credentials, not in .env)
# AVISO_USER=your-aviso-username

# AVISO+ password (store in .fes_credentials, not in .env)
# AVISO_PASS=your-aviso-password

# ================================================
# Custom Domain (Optional)
# ================================================

# Custom domain for Cloud Run service
# DOMAIN=api.yourdomain.com

# ================================================
# Monitoring & Logging (Optional)
# ================================================

# Log level: debug, info, warn, error (optional)
# LOG_LEVEL=info

# Enable structured JSON logging (optional)
# LOG_FORMAT=json

# ================================================
# Development & Testing
# ================================================

# Enable mock FES data generation
# MOCK_FES=true

# Mock FES region: japan, global, custom
# MOCK_REGION=japan

# Mock FES resolution in degrees
# MOCK_RESOLUTION=0.1

# ================================================
# Notes
# ================================================
#
# 1. For local development:
#    - Copy this file to .env
#    - Update values as needed
#    - .env is git-ignored for security
#
# 2. For Cloud Run deployment:
#    - Set environment variables in GitHub secrets
#    - Or pass via gcloud run deploy --set-env-vars
#
# 3. For AVISO credentials:
#    - Store in .fes_credentials (git-ignored)
#    - Format: username on line 1, password on line 2
#    - Or use: make fes-setup
#
# 4. For GitHub Actions:
#    - Run: ./scripts/gcp-setup.sh all
#    - Add output secrets to GitHub repository settings
#    - Required secrets: PROJECT_ID, WIF_PROVIDER, WIF_SERVICE_ACCOUNT
#
# 5. Security:
#    - Never commit .env or .fes_credentials to git
#    - Use Secret Manager for production secrets
#    - Rotate credentials regularly
#
